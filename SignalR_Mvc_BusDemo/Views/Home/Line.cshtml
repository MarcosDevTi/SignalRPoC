@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var group = (string)ViewData["Group"];
    var title = (string)ViewData["Title"];
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <div> <h2 class="m-0">@title</h2> <p id="connectionId"></p> </div>
    <div class="btn-group">
        <button id="btnConnect" class="btn btn-success btn-sm">Connect</button>
        <button id="btnDisconnect" class="btn btn-outline-danger btn-sm">Disconnect</button>
    </div>

</div>
<div class="card shadow-sm"> <div class="card-body"> <p class="text-muted">Current stop: <span id="stop">0</span> / <span id="total">0</span></p> <div class="progress mb-2" role="progressbar" aria-valuemin="0" aria-valuemax="100"> <div id="progressBar" class="progress-bar" style="width:0%">0%</div> </div> </div> </div>
<script>     const groupName = '@group'; let connection = null;
    function buildConnection() {
        connection = new signalR.HubConnectionBuilder().withUrl('/bushub').build();

        connection.on('BusProgress', (msg) => {
            if (msg.group === groupName) {
                document.getElementById('stop').textContent = msg.stopNumber;
                document.getElementById('total').textContent = msg.totalStops;
                document.getElementById('progressBar').style.width = msg.progressPercent + '%';
                document.getElementById('progressBar').textContent = Math.round(msg.progressPercent) + '%';
            }
        });

        connection.on('ForceDisconnect', () => {
            alertDisconnected();
            connection.stop();
        });

        connection.onreconnected(id => {
            showConnectionId(id);
        });
    }

    function showConnectionId(id) {
        document.getElementById('connectionId').textContent = `Connection ID: ${id}`;
    }

    function alertDisconnected(){
        const cardBody = document.querySelector('.card-body');
        if (document.getElementById('forceDisconnectAlert')) return;
        const alertDiv = document.createElement('div');
        alertDiv.id = 'forceDisconnectAlert';
        alertDiv.className = 'alert alert-warning d-flex justify-content-between align-items-center mt-3';
        alertDiv.innerHTML = `
            <span>⚠️ You were disconnected from the server.</span>
            <button id="btnRefresh" class="btn btn-sm btn-primary">Refresh</button>
        `;
        cardBody.appendChild(alertDiv);
        document.getElementById('btnRefresh').addEventListener('click', () => {
            location.reload();
        });
    }

    async function loadCurrentIfAvailable() {
        try {
            const current = await connection.invoke('GetCurrent', groupName);
            if (current && current.group === groupName) {
                document.getElementById('stop').textContent = current.stopNumber;
                document.getElementById('total').textContent = current.totalStops;
                document.getElementById('progressBar').style.width = current.progressPercent + '%';
                document.getElementById('progressBar').textContent = Math.round(current.progressPercent) + '%';
            }
        } catch {}
    }

    async function connect() {
        if (!connection) buildConnection();
        if (connection.state === 'Connected') return;
        await connection.start();
        showConnectionId(connection.connectionId);
    }

    async function disconnect() {
        if (connection && connection.state !== 'Disconnected') {
            await connection.stop();
            alertDisconnected();
            document.getElementById('connectionId').textContent = '';
        }
    }

    document.getElementById('btnConnect').addEventListener('click', async () => { await connect(); await connection.invoke('JoinGroup', groupName); await loadCurrentIfAvailable(); });
    document.getElementById('btnDisconnect').addEventListener('click', async () => { await disconnect(); });

    (async () => {
        await connect();
        await connection.invoke('JoinGroup', groupName);
        await loadCurrentIfAvailable();
    })();

</script>