@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1 class="mb-4">Bus Dashboard (Live)</h1>
<div class="mb-3">
    <div class="btn-group" role="group" aria-label="Group controls">
        <select id="groupSelector" class="form-select form-select-sm" style="width:auto; display:inline-block;">
            <option value="group-a">Line A</option>
            <option value="group-b">Line B</option>
            <option value="group-c">Line C</option>
            <option value="group-d">Line D</option>
            <option value="group-e">Line E</option>
        </select>
        <button id="btnPause" class="btn btn-warning btn-sm">Pause Group</button>
        <button id="btnResume" class="btn btn-success btn-sm">Resume Group</button>
    </div>
</div>

<div class="table-responsive mb-4">
    <table id="dashboardTable" class="table table-striped align-middle">
        <thead class="table-dark">
            <tr>
                <th>Title</th>
                <th style="width:320px">Progress</th>
                <th>Stop</th>
                <th>Users Connected</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<h3>Active Connections</h3>
<div class="table-responsive">
    <table id="connectionsTable" class="table table-hover align-middle">
        <thead class="table-secondary">
            <tr>
                <th>Group</th>
                <th>Connection Id</th>
                <th>Connected Since (UTC)</th>
                <th>Duration</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<script>
    console.log('Connecting to DashboardHub...');
    const connection = new signalR.HubConnectionBuilder().withUrl('/dashboardhub').build();
    connection.start().then(() => console.log('Connected to DashboardHub'));

    function renderRow(item) {
        const tr = document.createElement('tr');
        tr.innerHTML = `
            <td><strong>${item.title}</strong></td>
            <td>
                <div class="progress" role="progressbar" aria-valuenow="${item.progressPercent.toFixed(1)}" aria-valuemin="0" aria-valuemax="100">
                    <div class="progress-bar" style="width:${item.progressPercent}%;">${item.progressPercent.toFixed(0)}%</div>
                </div>
            </td>
            <td>${item.stopNumber} / ${item.totalStops}</td>
            <td><span class="badge bg-primary">${item.users}</span></td>
            <td>${item.paused ? '<span class="badge bg-warning text-dark">Paused</span>' : '<span class="badge bg-success">Active</span>'}</td>`;
        return tr;
    }

    function renderConnections(data) {
        const tbody = document.querySelector('#connectionsTable tbody');
        tbody.innerHTML = '';
        const now = Date.now();
        data.forEach(line => {
            (line.connections || []).forEach(c => {
                const since = new Date(c.connectedAtUtc);
                const durationMs = now - since.getTime();
                const mins = Math.floor(durationMs / 60000);
                const secs = Math.floor((durationMs % 60000) / 1000);
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${line.group}</td>
                    <td><code>${c.connectionId}</code></td>
                    <td>${since.toISOString()}</td>
                    <td>${mins}m ${secs}s</td>
                    <td><button class="btn btn-sm btn-outline-danger" data-conn="${c.connectionId}">Disconnect</button></td>`;
                tbody.appendChild(tr);
            });
        });
        tbody.querySelectorAll('button[data-conn]').forEach(btn => {
            btn.addEventListener('click', async () => {
                const id = btn.getAttribute('data-conn');
                await connection.invoke('Kick', id);
                console.log('Requested kick for', id);
            });
        });
    }

    connection.on('DashboardUpdate', (data) => {
        console.log('Dashboard update:', data);
        const tbody = document.querySelector('#dashboardTable tbody');
        tbody.innerHTML = '';
        data.forEach(item => tbody.appendChild(renderRow(item)));
        renderConnections(data);
    });

    document.getElementById('btnPause').addEventListener('click', async () => {
        const g = document.getElementById('groupSelector').value;
        await connection.invoke('PauseGroup', g);
        console.log('Paused', g);
    });
    document.getElementById('btnResume').addEventListener('click', async () => {
        const g = document.getElementById('groupSelector').value;
        await connection.invoke('ResumeGroup', g);
        console.log('Resumed', g);
    });
</script>
